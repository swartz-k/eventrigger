
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.7.0
  creationTimestamp: null
  name: sensors.core.eventrigger.com
spec:
  group: core.eventrigger.com
  names:
    kind: Sensor
    listKind: SensorList
    plural: sensors
    singular: sensor
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: Sensor is the Schema for the sensors API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: SensorSpec defines the desired state of Sensor
            properties:
              events:
                description: Foo is an example field of Sensor. Edit sensor_types.go
                  to remove/update
                items:
                  description: Event Support CloudEvents && Events
                  properties:
                    contentType:
                      description: ContentType
                      type: string
                    source:
                      description: Source is a unique name of this dependency
                      type: string
                    type:
                      description: Type is a unique name of this dependency
                      type: string
                  required:
                  - contentType
                  - source
                  - type
                  type: object
                type: array
              triggers:
                description: Triggers is a list of the things that this sensor evokes.
                  These are the outputs from this sensor.
                items:
                  description: Trigger is an action taken, output produced, an events
                    created, a message sent
                  properties:
                    template:
                      description: Template describes the trigger specification.
                      properties:
                        conditions:
                          description: 'Conditions is the conditions to execute the
                            trigger. For example: "(dep01 || dep02) && dep04"'
                          type: string
                        http:
                          properties:
                            headers:
                              additionalProperties:
                                type: string
                              description: Headers for the HTTP request.
                              type: object
                            method:
                              description: Method refers to the type of the HTTP request.
                                Refer https://golang.org/src/net/http/method.go for
                                more info. Default value is POST.
                              type: string
                            timeout:
                              description: Timeout refers to the HTTP request timeout
                                in seconds. Default value is 60 seconds.
                              format: int64
                              type: integer
                            url:
                              description: URL refers to the URL to send HTTP request
                                to.
                              type: string
                          required:
                          - url
                          type: object
                        k8s:
                          description: StandardK8STrigger refers to the trigger designed
                            to create or update a generic Kubernetes resource.
                          properties:
                            liveObject:
                              description: LiveObject specifies whether the resource
                                should be directly fetched from K8s instead of being
                                marshaled from the resource artifact. If set to true,
                                the resource artifact must contain the information
                                required to uniquely identify the resource in the
                                cluster, that is, you must specify "apiVersion", "kind"
                                as well as "name" and "namespace" meta data. Only
                                valid for operation type `update`
                              type: boolean
                            operation:
                              description: Operation refers to the type of operation
                                performed on the k8s resource. Default value is Create.
                              type: string
                            patchStrategy:
                              description: 'PatchStrategy controls the K8s object
                                patching strategy when the trigger operation is specified
                                as patch. possible values: "application/json-patch+json"
                                "application/merge-patch+json" "application/strategic-merge-patch+json"
                                "application/apply-patch+yaml". Defaults to "application/merge-patch+json"'
                              type: string
                          type: object
                        name:
                          description: Name is a unique name of the action to take.
                          type: string
                      required:
                      - name
                      type: object
                  type: object
                type: array
            required:
            - events
            - triggers
            type: object
          status:
            description: SensorStatus defines the observed state of Sensor
            properties:
              conditions:
                description: Conditions are the latest available observations of a
                  resource's current state.
                items:
                  description: Condition contains details about resource state
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: Human-readable message indicating details about
                        last transition.
                      type: string
                    reason:
                      description: Unique, this should be a short, machine understandable
                        string that gives the reason for condition's last transition.
                        For example, "ImageNotFound"
                      type: string
                    status:
                      description: Condition status, True, False or Unknown.
                      type: string
                    type:
                      description: Condition type.
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
